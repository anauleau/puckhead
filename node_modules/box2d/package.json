{
  "name": "box2d",
  "version": "1.0.0",
  "description": "2D physics engine",
  "homepage": "http://github.com/jadell/box2dnode",
  "author": {
    "name": "Josh Adell",
    "email": "josh.adell@gmail.com",
    "url": "http://everymansoftware.blogspot.com/"
  },
  "main": "./box2dnode",
  "engines": [
    "node"
  ],
  "readme": "@author Josh Adell <josh.adell@gmail.com>\n\nA port of the box2djs library into a node module.\n\nHere is the box2d \"Hello World\" program from http://www.box2d.org/ written for node:\n\n--- BEGIN CODE EXAMPLE ---\n\nvar sys = require(\"sys\"),\n   b2d = require(\"./box2dnode\");\n\n// Define world\nvar worldAABB = new b2d.b2AABB();\nworldAABB.lowerBound.Set(-100.0, -100.0);\nworldAABB.upperBound.Set(100.0, 100.0);\n\nvar gravity = new b2d.b2Vec2(0.0, -10.0);\nvar doSleep = true;\n\nvar world = new b2d.b2World(worldAABB, gravity, doSleep);\n\n// Ground Box\nvar groundBodyDef = new b2d.b2BodyDef();\ngroundBodyDef.position.Set(0.0, -10.0);\n\nvar groundBody = world.CreateBody(groundBodyDef);\n\nvar groundShapeDef = new b2d.b2PolygonDef();\ngroundShapeDef.SetAsBox(50.0, 10.0);\n\ngroundBody.CreateShape(groundShapeDef);\n\n// Dynamic Body\nvar bodyDef = new b2d.b2BodyDef();\nbodyDef.position.Set(0.0, 4.0);\n\nvar body = world.CreateBody(bodyDef);\n\nvar shapeDef = new b2d.b2PolygonDef();\nshapeDef.SetAsBox(1.0, 1.0);\nshapeDef.density = 1.0;\nshapeDef.friction = 0.3;\nbody.CreateShape(shapeDef);\nbody.SetMassFromShapes();\n\n// Run Simulation!\nvar timeStep = 1.0 / 60.0;\n\nvar iterations = 10;\n\nfor (var i=0; i < 60; i++) {\n\tworld.Step(timeStep, iterations);\n\tvar position = body.GetPosition();\n\tvar angle = body.GetAngle();\n\tsys.puts(i+\": <\"+position.x+\", \"+position.y+\"> @\"+angle);\n}\n\n--- END CODE EXAMPLE ---\n",
  "readmeFilename": "README",
  "_id": "box2d@1.0.0",
  "dist": {
    "shasum": "3d790ec070d90abd5ef9580abb89c5aca9871a87"
  },
  "_from": "box2d@",
  "_resolved": "https://registry.npmjs.org/box2d/-/box2d-1.0.0.tgz"
}
